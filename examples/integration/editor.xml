<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax" order="2">

<css lib="datatables searchpanes datetime editor buttons select" />
<js lib="jquery datatables searchpanes datetime editor buttons select">
<![CDATA[

$(document).ready(function() {
  var editor = new $.fn.dataTable.Editor({
    table: "#example",
    fields: [
      {
        label: "Name:",
        name: "name",
        attr: {
          required: true
        }
      },
      {
        label: "Position:",
        name: "position"
      },
      {
        label: "Start date:",
        name: "start_date",
        type: "datetime"
      },
      {
        label: "Salary:",
        name: "salary"
      }
    ]
  });

  $("#example").DataTable({
    dom: "Bfrtip",
    columns: [
      { data: "name" },
      { data: "position" },
      { data: "start_date" },
      { data: "salary" }
    ],
    select: true,
    buttons: [
      { extend: "create", editor: editor },
      { extend: "edit", editor: editor },
      { extend: "remove", editor: editor }
    ]
  });
});



]]>
</js>

<title lib="searchBuilder">Interaction with rendering and arrays</title>

<info><![CDATA[

This example demonstrates searching on arrays which are being rendered. When an array is in use a custom column type of array can be applied to SearchBuilder. This will provide the user with conditions that are designed to work specifically with arrays, as not all of the normal conditions will return the expected results.

Selecting `Permissions > Equals > Desktop,Printers,Servers` shows how SearchBuilder copes with the order of arrays. In short, the order does not matter, and SearchBuilder will order the values within each array alphabetically.

]]></info>

<custom-table>
	<table id="example" class="display nowrap" width="100%">
        <thead>
          <tr>
            <th>Name</th>
            <th>Position</th>
            <th>Start date</th>
            <th>Salary</th>
          </tr>
        </thead>

        <tfoot>
          <tr>
            <th>Name</th>
            <th>Position</th>
            <th>Start date</th>
            <th>Salary</th>
          </tr>
        </tfoot>

        <tbody>
          <tr id="1">
            <td>Tiger Nixon</td>
            <td>System Architect</td>
            <td>2011/04/25</td>
            <td>$3,120</td>
          </tr>
          <tr id="2">
            <td>Garrett Winters</td>
            <td>Director</td>
            <td>2011/07/25</td>
            <td>$5,300</td>
          </tr>
          <tr id="3">
            <td>Ashton Cox</td>
            <td>Technical Author</td>
            <td>2009/01/12</td>
            <td>$4,800</td>
          </tr>
          <tr id="4">
            <td>Cedric Kelly</td>
            <td>Javascript Developer</td>
            <td>2012/03/29</td>
            <td>$3,600</td>
          </tr>
          <tr id="5">
            <td>Jenna Elliott</td>
            <td>Financial Controller</td>
            <td>2008/11/28</td>
            <td>$5,300</td>
          </tr>
          <tr id="6">
            <td>Brielle Williamson</td>
            <td>Integration Specialist</td>
            <td>2012/12/02</td>
            <td>$4,525</td>
          </tr>
        </tbody>
      </table>
</custom-table>

</dt-example>

