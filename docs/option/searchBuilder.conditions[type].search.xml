<?xml version="1.0" encoding="UTF-8" ?>
<dt-option library="SearchBuilder">
	<name>searchBuilder.conditions[type].search</name>
	<summary>Define the comparison function for the condition</summary>
	<since>SearchBuilder 0.0.1</since>

	<type type="function">
        <signature>searchBuilder.conditions[type].search</signature>
		<description>
            The function that is used when filtering the DataTable.
        </description>
        <parameter type="string">The data from the table to be compared</parameter>
        <parameter type="string[]">The data collected from the value elements using the `-init searchBuilder.conditions[type].get` function</parameter>
        <returns type="boolean">Returns a boolean indicating whether it has passed the criteria or not</returns>
	</type>

	<description>
		<![CDATA[
		This function is what the condition uses to filter the table. It takes three parameters.

        * `value` the value that is present in the DataTable.
        * `comparison` an array of values, with each index representing the number of value input that the `value` is to be filtered against.
        * `that` the criteria instance, should any of it's internal properties be required.

        This function is to return a boolean, true if the row is to be included in the result, false if not. 
        ]]>
	</description>

	<example title="Include the row if it equals the selected value"><![CDATA[

        ...    
        search: function(value, comparison, that) {
            return +value === +comparison[0];
        }
        ...

]]></example>

<related type="init">searchBuilder.conditions[type]</related>
<related type="init">searchBuilder.conditions[type].conditionName</related>
<related type="init">searchBuilder.conditions[type].init</related>
<related type="init">searchBuilder.conditions[type].inputValue</related>
<related type="init">searchBuilder.conditions[type].isInputValid</related>

</dt-option>
