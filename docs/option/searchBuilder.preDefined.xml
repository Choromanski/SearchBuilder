<?xml version="1.0" encoding="UTF-8" ?>
<dt-option library="SearchBuilder">
	<name>searchBuilder.preDefined</name>
	<summary>Set a predefined search query</summary>
	<since>SearchBuilder 0.0.1</since>

	<type type="Object">
		<description>
            The details object for the top level group.
        </description>
	</type>

    <type type="boolean">
		<description>
            When false no predefined search is applied.
        </description>
	</type>

	<default value="false">
        The default value for the `-init searchBuilder.preDefined` option is false meaning that as standard there will be no preDefined search applied.
	</default>
	<description>
		<![CDATA[
		This is useful as it allows for complex preDefined searches to be applied to a DataTable.

        This object contains 2 properties.

        * `-init searchBuilder.preDefined.criteria` This holds the criteria that must be applied to the top group. This property is an array of objects, which can either by criteria objects or group objects.
        * `-init searchBuilder.preDefined.logic` This is the logic that is to be applied to the group.
        ]]>
	</description>

	<example title="Simple single level search"><![CDATA[

    $('#example').DataTable( {
        dom: 'Qlfrtip',
        searchBuilder: {
            preDefined: {
                criteria:[
                    {
                        condition: 'Equals',
                        data: 'Office',
                        value: ['Edinburgh']
                    }
                ],
                logic: 'AND'
            }
        }
    });

]]></example>

	<example title="More Complex Multi level search"><![CDATA[

    $('#example').DataTable( {
        dom: 'Qlfrtip',
        searchBuilder: {
            preDefined: {
                criteria:[
                    {
                        condition: 'Equals',
                        data: 'Office',
                        value: ['Edinburgh']
                    },
                    {
                        criteria: [
                            {
                                condition: 'Equals',
                                data: 'Name',
                                value: ['Cedric Kelly']
                            },
                            {
                                condition: 'Equals',
                                data: 'Name',
                                value: ['Dai Rios']
                            }
                        ],
                        logic: 'OR'
                    }
                ],
                logic: 'AND'
            }
        }
    });

]]></example>

<related type="init">searchBuilder.preDefined</related>
<related type="init">searchBuilder.preDefined.logic</related>
<related type="init">searchBuilder.preDefined.criteria</related>
<related type="init">searchBuilder.preDefined.criteria.condition</related>
<related type="init">searchBuilder.preDefined.criteria.value</related>
<related type="init">searchBuilder.preDefined.criteria.dataTitle</related>

</dt-option>
