<?xml version="1.0" encoding="UTF-8" ?>
<dt-option library="SearchBuilder">
	<name>searchBuilder.conditions[type].conditionName</name>
	<summary>The value that is displayed in the select element</summary>
	<since>SearchBuilder 0.0.1</since>

	<type type="string">
		<description>
            This is the value that will be displayed in the select element, it is also what is used as a reference throughout the internals.
        </description>
	</type>

	<description>
		<![CDATA[
		This allows the display value of the condition to be set. The custom condition defined in the example will set a new `new` condition in the built in type `num`'s condition set.

		More details on the structure that is used can be found at `-init searchBuilder[type]`
        ]]>
	</description>

	<example title="Define the display value to be shown in the condition select"><![CDATA[

    $('#example').DataTable( {
        dom: 'Qfrtip',
        searchBuilder: {
            conditions: {
                "num":{
                    'new': {
                        conditionName: 'Made up',
                        init: function(that, fn, preDefined = null){
                            ...
                        },
                        inputValue: function(el, value = null){
                            ...
                        },
                        isInputValid: function(el, that){
                            ...
                        },
                        search: function(value, comparison) {
                            ...
                        },
                    }
                }
            }
        }
    });

]]></example>

<related type="init">searchBuilder.conditions[type]</related>
<related type="init">searchBuilder.conditions[type].init</related>
<related type="init">searchBuilder.conditions[type].inputValue</related>
<related type="init">searchBuilder.conditions[type].isInputValid</related>
<related type="init">searchBuilder.conditions[type].search</related>

</dt-option>
