<?xml version="1.0" encoding="UTF-8" ?>
<dt-option library="SearchBuilder">
	<name>searchBuilder.conditions[type].isInputValid</name>
	<summary>Function to determine if the criteria is isInputValid</summary>
	<since>SearchBuilder 0.0.1</since>

	<type type="function">
        <signature>searchBuilder.conditions[type].isInputValid()</signature>
		<description>
            This function returns a boolean representing whether the criteria should be included or not.
        </description>
        <parameter type="JQuery<HTMLElement>[]">Array of the elements used to collect values as set by `-init searchBuilder.conditions[type].init`</parameter>
        <returns type="boolean">Returns a boolean indicating whether the criteria is to be included in searching.</returns>
	</type>

	<description>
		<![CDATA[
		This function returns a boolean representing whether the criteria should be included or not. It takes 2 parameters.

            * `val` the array of value elements that belong to this criteria. These are set in `-init searchBuilder.conditions[type].init`.
            * `that` the criteria instance that is being checked.

            The internals of the function are down to the functionality that you wish to create. Some examples are shown below for select and input elements
        ]]>
	</description>

<example title="Select isInputValid function"><![CDATA[
    ...
    isInputValid (el, that) {
        $(that.dom.valueTitle).attr('selected', false);
        let allFilled = true;

        for (let element of el) {
            if ($(element).has('option:selected').length < 1) {
                allFilled = false;
            }
        }

        return allFilled;
    }
    ...
]]></example>

<example title="Input isInputValid function"><![CDATA[
    ...
    isInputValid (el, that) {
        let allFilled = true;
		for (let element of el) {
			if ($(element).val().length === 0) {
				allFilled = false;
			}
		}

		return allFilled;
    }
    ...
]]></example>

<related type="init">searchBuilder.conditions[type]</related>
<related type="init">searchBuilder.conditions[type].conditionName</related>
<related type="init">searchBuilder.conditions[type].inputValue</related>
<related type="init">searchBuilder.conditions[type].isInputValid</related>
<related type="init">searchBuilder.conditions[type].search</related>

</dt-option>
