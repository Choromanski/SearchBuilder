<?xml version="1.0" encoding="UTF-8" ?>
<dt-option library="SearchBuilder">
	<name>searchBuilder.conditions[type][cond].conditionName</name>
	<summary>The value that is displayed in the condition select element</summary>
	<since>1.0.0</since>

	<type type="string">
		<description>
            This is the string value that will be displayed in the condition select element to represent this condition.
        </description>
	</type>

	<description>
		<![CDATA[
This allows the display value of the condition to be set. The custom condition defined in the example will set a new `Multiple Of` condition in the built in type `num`'s condition set.

More details on the structure that is used can be found at `-init searchBuilder.conditions[type][cond]`

The manual page for [custom conditions](../extensions/searchbuilder/customConditions.html) covers in detail how this and the other values in this object come together to create a custom condition.

Note: Here the `type` in `-init searchBuilder.conditions[type][cond].conditionName` is the type for the column, for more details refer to `-init columns.type`.

Note: Please also not that custom conditions are not supported when the `-init serverSide` option is set to true.
        ]]>
	</description>

	<example title="Define the display value to be shown in the condition select"><![CDATA[

$('#example').DataTable( {
    dom: 'Qfrtip',
    searchBuilder: {
        conditions: {
            "num":{
                'multipleOf': {
                    conditionName: 'Multiple Of',
                    init: function(that, fn, preDefined = null){
                        ...
                    },
                    inputValue: function(el, value = null){
                        ...
                    },
                    isInputValid: function(el, that){
                        ...
                    },
                    search: function(value, comparison) {
                        ...
                    },
                }
            }
        }
    }
});

]]></example>

<related type="init">searchBuilder.conditions[type]</related>
<related type="init">searchBuilder.conditions[type][cond]</related>
<related type="init">searchBuilder.conditions[type][cond].init</related>
<related type="init">searchBuilder.conditions[type][cond].inputValue</related>
<related type="init">searchBuilder.conditions[type][cond].isInputValid</related>
<related type="init">searchBuilder.conditions[type][cond].search</related>

</dt-option>
