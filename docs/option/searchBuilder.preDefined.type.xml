<?xml version="1.0" encoding="UTF-8" ?>
<dt-option library="SearchBuilder">
	<name>searchBuilder.preDefined.type</name>
	<summary>Set the type for an object on the `-init searchBuilder.preDefined.criteria`</summary>
	<since>SearchBuilder 0.0.1</since>

	<type type="string">
		<description>
            The value for the type of an object on the `-init searchBuilder.preDefined.criteria` array.
        </description>
	</type>

	<default value="undefined">
        The default value for the `-init searchBuilder.preDefined.type` option is `undefined`. A type must be set to indicate whether the object is a group or a criteria.
	</default>
	<description>
		<![CDATA[
		This is useful as it allows type to be defined for objects on the `-init searchBuilder.preDefined.criteria` array.

        This must have a value of either `criteria` or `group` to indicate whether the object is a criteria or group respectively, as either could be present within the parent group. If `criteria` is specified then it indicates that the object is representing a criteria, this is used to define the individual conditions that are to be put in place within the parent group. `group` on the other hand would create a sub group of the parent group. This would allow for multiple further criteria or groups to be defined within the sub group, perhaps under a different `searchBuilder.predefined.logic` than the rest of the groups/criteria within the parent group.
        ]]>
	</description>

	<example title="Simple single level search showing both types"><![CDATA[

    $('#example').DataTable( {
        dom: 'Qlfrtip',
        searchBuilder: {
            preDefined: {
                criteria:[
                    {
                        condition: 'Equals',
                        data: 'Office',
                        type: 'criteria',
                        value: ['Edinburgh']
                    }
                ],
                type: 'AND',
                type: 'group'
            }
        }
    });

]]></example>

<related type="init">searchBuilder.preDefined</related>
<related type="init">searchBuilder.preDefined.type</related>
<related type="init">searchBuilder.preDefined.logic</related>
<related type="init">searchBuilder.preDefined.criteria</related>
<related type="init">searchBuilder.preDefined.criteria.condition</related>
<related type="init">searchBuilder.preDefined.criteria.value</related>
<related type="init">searchBuilder.preDefined.criteria.dataTitle</related>

</dt-option>
